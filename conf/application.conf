# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="KH3U4l8gLooiiQiHOgF0`8/Z[BAgQ60dM]9J::_PFWCw4s6Zu61k@J_E^3SUtpp@"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
db.default.url="jdbc:h2:mem:play;MODE=MYSQL;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false"
db.default.driver=org.h2.Driver
#db.default.url="jdbc:mysql://localhost:3306/personal_api"
#db.default.driver=com.mysql.jdbc.Driver
db.default.user=root
db.default.pass=root

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Swagger Configuration
swagger.api.basepath="http://localhost:9000"

# Default user slug to use if none provided
default.user-slug="bryangilbert"

# Global Settings
application.global="global.Global"

# Load startup data
startup-data.load=true

# Load startup data from directory ($resources refers to <project>/conf)
startup-data.directory="$resources/startup-data"

contexts {
  sql-pool {
    fork-join-executor {
      parallelism-factor = 10.0
    }
  }
}